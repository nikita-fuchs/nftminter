{
    "encoded_aci": {
      "contract": {
        "event": {
          "variant": [
            {
              "Transfer": [
                "address",
                "address",
                "int"
              ]
            },
            {
              "Approval": [
                "address",
                "address",
                "int",
                "string"
              ]
            },
            {
              "ApprovalForAll": [
                "address",
                "address",
                "string"
              ]
            }
          ]
        },
        "functions": [
          {
            "arguments": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "symbol",
                "type": "string"
              }
            ],
            "name": "init",
            "payable": false,
            "returns": "MintableMappedMetadataNFT.state",
            "stateful": true
          },
          {
            "arguments": [
              {
                "name": "owner",
                "type": "address"
              },
              {
                "name": "metadata",
                "type": {
                  "option": [
                    "MintableMappedMetadataNFT.metadata"
                  ]
                }
              },
              {
                "name": "data",
                "type": {
                  "option": [
                    "string"
                  ]
                }
              }
            ],
            "name": "mint",
            "payable": false,
            "returns": "int",
            "stateful": true
          },
          {
            "arguments": [],
            "name": "aex141_extensions",
            "payable": false,
            "returns": {
              "list": [
                "string"
              ]
            },
            "stateful": false
          },
          {
            "arguments": [],
            "name": "meta_info",
            "payable": false,
            "returns": "MintableMappedMetadataNFT.meta_info",
            "stateful": false
          },
          {
            "arguments": [
              {
                "name": "token_id",
                "type": "int"
              }
            ],
            "name": "metadata",
            "payable": false,
            "returns": {
              "option": [
                "MintableMappedMetadataNFT.metadata"
              ]
            },
            "stateful": false
          },
          {
            "arguments": [
              {
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balance",
            "payable": false,
            "returns": {
              "option": [
                "int"
              ]
            },
            "stateful": false
          },
          {
            "arguments": [
              {
                "name": "token_id",
                "type": "int"
              }
            ],
            "name": "owner",
            "payable": false,
            "returns": {
              "option": [
                "address"
              ]
            },
            "stateful": false
          },
          {
            "arguments": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "token_id",
                "type": "int"
              },
              {
                "name": "data",
                "type": {
                  "option": [
                    "string"
                  ]
                }
              }
            ],
            "name": "transfer",
            "payable": false,
            "returns": {
              "tuple": []
            },
            "stateful": true
          },
          {
            "arguments": [
              {
                "name": "approved",
                "type": "address"
              },
              {
                "name": "token_id",
                "type": "int"
              },
              {
                "name": "enabled",
                "type": "bool"
              }
            ],
            "name": "approve",
            "payable": false,
            "returns": {
              "tuple": []
            },
            "stateful": true
          },
          {
            "arguments": [
              {
                "name": "operator",
                "type": "address"
              },
              {
                "name": "enabled",
                "type": "bool"
              }
            ],
            "name": "approve_all",
            "payable": false,
            "returns": {
              "tuple": []
            },
            "stateful": true
          },
          {
            "arguments": [
              {
                "name": "token_id",
                "type": "int"
              }
            ],
            "name": "get_approved",
            "payable": false,
            "returns": {
              "option": [
                "address"
              ]
            },
            "stateful": false
          },
          {
            "arguments": [
              {
                "name": "token_id",
                "type": "int"
              },
              {
                "name": "a",
                "type": "address"
              }
            ],
            "name": "is_approved",
            "payable": false,
            "returns": "bool",
            "stateful": false
          },
          {
            "arguments": [
              {
                "name": "owner",
                "type": "address"
              },
              {
                "name": "operator",
                "type": "address"
              }
            ],
            "name": "is_approved_for_all",
            "payable": false,
            "returns": "bool",
            "stateful": false
          },
          {
            "arguments": [
              {
                "name": "token_id",
                "type": "int"
              },
              {
                "name": "mutable_attributes",
                "type": "string"
              }
            ],
            "name": "update_mutable_attributes",
            "payable": false,
            "returns": {
              "tuple": []
            },
            "stateful": true
          }
        ],
        "kind": "contract_main",
        "name": "MintableMappedMetadataNFT",
        "payable": false,
        "state": {
          "record": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "meta_info",
              "type": "MintableMappedMetadataNFT.meta_info"
            },
            {
              "name": "owners",
              "type": {
                "map": [
                  "int",
                  "address"
                ]
              }
            },
            {
              "name": "balances",
              "type": {
                "map": [
                  "address",
                  "int"
                ]
              }
            },
            {
              "name": "approvals",
              "type": {
                "map": [
                  "int",
                  "address"
                ]
              }
            },
            {
              "name": "operators",
              "type": {
                "map": [
                  "address",
                  {
                    "map": [
                      "address",
                      "bool"
                    ]
                  }
                ]
              }
            },
            {
              "name": "metadata",
              "type": {
                "map": [
                  "int",
                  "MintableMappedMetadataNFT.metadata"
                ]
              }
            },
            {
              "name": "counter",
              "type": "int"
            }
          ]
        },
        "type_defs": [
          {
            "name": "metadata_type",
            "typedef": {
              "variant": [
                {
                  "URL": []
                },
                {
                  "IPFS": []
                },
                {
                  "OBJECT_ID": []
                },
                {
                  "MAP": []
                }
              ]
            },
            "vars": []
          },
          {
            "name": "metadata",
            "typedef": {
              "variant": [
                {
                  "MetadataIdentifier": [
                    "string"
                  ]
                },
                {
                  "MetadataMap": [
                    {
                      "map": [
                        "string",
                        "string"
                      ]
                    }
                  ]
                }
              ]
            },
            "vars": []
          },
          {
            "name": "meta_info",
            "typedef": {
              "record": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "name": "base_url",
                  "type": {
                    "option": [
                      "string"
                    ]
                  }
                },
                {
                  "name": "metadata_type",
                  "type": "MintableMappedMetadataNFT.metadata_type"
                }
              ]
            },
            "vars": []
          }
        ]
      }
    },
    "external_encoded_aci": [
      {
        "namespace": {
          "name": "ListInternal",
          "type_defs": []
        }
      },
      {
        "namespace": {
          "name": "List",
          "type_defs": []
        }
      },
      {
        "namespace": {
          "name": "Option",
          "type_defs": []
        }
      },
      {
        "namespace": {
          "name": "String",
          "type_defs": []
        }
      },
      {
        "namespace": {
          "name": "Utils",
          "type_defs": []
        }
      },
      {
        "contract": {
          "functions": [
            {
              "arguments": [],
              "name": "aex141_extensions",
              "payable": false,
              "returns": {
                "list": [
                  "string"
                ]
              },
              "stateful": false
            },
            {
              "arguments": [],
              "name": "meta_info",
              "payable": false,
              "returns": "IAEX141.meta_info",
              "stateful": false
            },
            {
              "arguments": [
                {
                  "name": "_1",
                  "type": "int"
                }
              ],
              "name": "metadata",
              "payable": false,
              "returns": {
                "option": [
                  "IAEX141.metadata"
                ]
              },
              "stateful": false
            },
            {
              "arguments": [
                {
                  "name": "_1",
                  "type": "address"
                }
              ],
              "name": "balance",
              "payable": false,
              "returns": {
                "option": [
                  "int"
                ]
              },
              "stateful": false
            },
            {
              "arguments": [
                {
                  "name": "_1",
                  "type": "int"
                }
              ],
              "name": "owner",
              "payable": false,
              "returns": {
                "option": [
                  "address"
                ]
              },
              "stateful": false
            },
            {
              "arguments": [
                {
                  "name": "_1",
                  "type": "address"
                },
                {
                  "name": "_2",
                  "type": "address"
                },
                {
                  "name": "_3",
                  "type": "int"
                },
                {
                  "name": "_4",
                  "type": {
                    "option": [
                      "string"
                    ]
                  }
                }
              ],
              "name": "transfer",
              "payable": false,
              "returns": "unit",
              "stateful": true
            },
            {
              "arguments": [
                {
                  "name": "_1",
                  "type": "address"
                },
                {
                  "name": "_2",
                  "type": "int"
                },
                {
                  "name": "_3",
                  "type": "bool"
                }
              ],
              "name": "approve",
              "payable": false,
              "returns": "unit",
              "stateful": true
            },
            {
              "arguments": [
                {
                  "name": "_1",
                  "type": "address"
                },
                {
                  "name": "_2",
                  "type": "bool"
                }
              ],
              "name": "approve_all",
              "payable": false,
              "returns": "unit",
              "stateful": true
            },
            {
              "arguments": [
                {
                  "name": "_1",
                  "type": "int"
                }
              ],
              "name": "get_approved",
              "payable": false,
              "returns": {
                "option": [
                  "address"
                ]
              },
              "stateful": false
            },
            {
              "arguments": [
                {
                  "name": "_1",
                  "type": "int"
                },
                {
                  "name": "_2",
                  "type": "address"
                }
              ],
              "name": "is_approved",
              "payable": false,
              "returns": "bool",
              "stateful": false
            },
            {
              "arguments": [
                {
                  "name": "_1",
                  "type": "address"
                },
                {
                  "name": "_2",
                  "type": "address"
                }
              ],
              "name": "is_approved_for_all",
              "payable": false,
              "returns": "bool",
              "stateful": false
            }
          ],
          "kind": "contract_interface",
          "name": "IAEX141",
          "payable": false,
          "type_defs": [
            {
              "name": "metadata_type",
              "typedef": {
                "variant": [
                  {
                    "URL": []
                  },
                  {
                    "IPFS": []
                  },
                  {
                    "OBJECT_ID": []
                  },
                  {
                    "MAP": []
                  }
                ]
              },
              "vars": []
            },
            {
              "name": "metadata",
              "typedef": {
                "variant": [
                  {
                    "MetadataIdentifier": [
                      "string"
                    ]
                  },
                  {
                    "MetadataMap": [
                      {
                        "map": [
                          "string",
                          "string"
                        ]
                      }
                    ]
                  }
                ]
              },
              "vars": []
            },
            {
              "name": "meta_info",
              "typedef": {
                "record": [
                  {
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "name": "symbol",
                    "type": "string"
                  },
                  {
                    "name": "base_url",
                    "type": {
                      "option": [
                        "string"
                      ]
                    }
                  },
                  {
                    "name": "metadata_type",
                    "type": "IAEX141.metadata_type"
                  }
                ]
              },
              "vars": []
            }
          ]
        }
      },
      {
        "contract": {
          "functions": [
            {
              "arguments": [
                {
                  "name": "_1",
                  "type": "address"
                },
                {
                  "name": "_2",
                  "type": "address"
                },
                {
                  "name": "_3",
                  "type": "int"
                },
                {
                  "name": "_4",
                  "type": {
                    "option": [
                      "string"
                    ]
                  }
                }
              ],
              "name": "on_nft_received",
              "payable": false,
              "returns": "bool",
              "stateful": false
            }
          ],
          "kind": "contract_interface",
          "name": "IAEX141NFTReceiver",
          "payable": false,
          "type_defs": []
        }
      }
    ],
    "interface": "\n\n\n\n\ncontract interface IAEX141 =\n  datatype metadata_type = URL | IPFS | OBJECT_ID | MAP\n  datatype metadata = MetadataIdentifier(string) | MetadataMap(map(string, string))\n  record meta_info = {name : string,symbol : string,base_url : option(string),metadata_type : IAEX141.metadata_type}\n  entrypoint aex141_extensions : () => list(string)\n  entrypoint meta_info : () => IAEX141.meta_info\n  entrypoint metadata : (int) => option(IAEX141.metadata)\n  entrypoint balance : (address) => option(int)\n  entrypoint owner : (int) => option(address)\n  stateful entrypoint transfer : (address, address, int, option(string)) => unit\n  stateful entrypoint approve : (address, int, bool) => unit\n  stateful entrypoint approve_all : (address, bool) => unit\n  entrypoint get_approved : (int) => option(address)\n  entrypoint is_approved : (int, address) => bool\n  entrypoint is_approved_for_all : (address, address) => bool\n\ncontract interface IAEX141NFTReceiver =\n  entrypoint on_nft_received : (address, address, int, option(string)) => bool\n\nmain contract MintableMappedMetadataNFT =\n  record state = {owner : address,meta_info : MintableMappedMetadataNFT.meta_info,owners : map(int, address),balances : map(address, int),approvals : map(int, address),operators : map(address, map(address, bool)),metadata : map(int, MintableMappedMetadataNFT.metadata),counter : int}\n  datatype event = Transfer(address, address, int) | Approval(address, address, int, string) | ApprovalForAll(address, address, string)\n  datatype metadata_type = URL | IPFS | OBJECT_ID | MAP\n  datatype metadata = MetadataIdentifier(string) | MetadataMap(map(string, string))\n  record meta_info = {name : string,symbol : string,base_url : option(string),metadata_type : MintableMappedMetadataNFT.metadata_type}\n  stateful entrypoint init : (string, string) => MintableMappedMetadataNFT.state\n  stateful entrypoint mint : (address, option(MintableMappedMetadataNFT.metadata), option(string)) => int\n  entrypoint aex141_extensions : () => list(string)\n  entrypoint meta_info : () => MintableMappedMetadataNFT.meta_info\n  entrypoint metadata : (int) => option(MintableMappedMetadataNFT.metadata)\n  entrypoint balance : (address) => option(int)\n  entrypoint owner : (int) => option(address)\n  stateful entrypoint transfer : (address, address, int, option(string)) => unit\n  stateful entrypoint approve : (address, int, bool) => unit\n  stateful entrypoint approve_all : (address, bool) => unit\n  entrypoint get_approved : (int) => option(address)\n  entrypoint is_approved : (int, address) => bool\n  entrypoint is_approved_for_all : (address, address) => bool\n  stateful entrypoint update_mutable_attributes : (int, string) => unit\n"
  }